apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: multiclusters.kube-vip.io
spec:
  group: kube-vip.io
  names:
    kind: MultiCluster
    listKind: MultiClusterList
    plural: multiclusters
    singular: multicluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MultiCluster is the Schema for the multiclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MultiClusterSpec defines the desired state of MultiCluster
            properties:
              address:
                description: |-
                  INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
              callsign:
                type: string
              fleet:
                items:
                  type: string
                type: array
              payload:
                type: string
              port:
                type: integer
              rank:
                type: integer
              ready:
                type: boolean
              serviceAddress:
                type: string
            required:
            - callsign
            - payload
            - port
            - rank
            - ready
            type: object
          status:
            description: MultiClusterStatus defines the observed state of MultiCluster
            properties:
              leaderAddress:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
              leading:
                type: boolean
              port:
                type: integer
              ready:
                type: boolean
            required:
            - leaderAddress
            - leading
            - port
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: kube-vip-multi-cluster
    control-plane: controller-manager
  name: kube-vip-multi-cluster-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: multiclusters.kube-vip.io
spec:
  group: kube-vip.io
  names:
    kind: MultiCluster
    listKind: MultiClusterList
    plural: multiclusters
    singular: multicluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MultiCluster is the Schema for the multiclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MultiClusterSpec defines the desired state of MultiCluster
            properties:
              address:
                description: |-
                  INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
              callsign:
                type: string
              fleet:
                items:
                  type: string
                type: array
              payload:
                type: string
              port:
                type: integer
              rank:
                type: integer
              ready:
                type: boolean
              serviceAddress:
                type: string
            required:
            - callsign
            - payload
            - port
            - rank
            - ready
            type: object
          status:
            description: MultiClusterStatus defines the observed state of MultiCluster
            properties:
              leaderAddress:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
              leading:
                type: boolean
              port:
                type: integer
              ready:
                type: boolean
            required:
            - leaderAddress
            - leading
            - port
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: kube-vip-multi-cluster
  name: kube-vip-multi-cluster-controller-manager
  namespace: kube-vip-multi-cluster-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: kube-vip-multi-cluster
  name: kube-vip-multi-cluster-leader-election-role
  namespace: kube-vip-multi-cluster-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-vip-multi-cluster-manager-role
rules:
- apiGroups:
  - kube-vip.io
  resources:
  - multiclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kube-vip.io
  resources:
  - multiclusters/finalizers
  verbs:
  - update
- apiGroups:
  - kube-vip.io
  resources:
  - multiclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-vip-multi-cluster
  name: kube-vip-multi-cluster-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: kube-vip-multi-cluster
  name: kube-vip-multi-cluster-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: kube-vip-multi-cluster
  name: kube-vip-multi-cluster-leader-election-rolebinding
  namespace: kube-vip-multi-cluster-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-vip-multi-cluster-leader-election-role
subjects:
- kind: ServiceAccount
  name: kube-vip-multi-cluster-controller-manager
  namespace: kube-vip-multi-cluster-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: kube-vip-multi-cluster
  name: kube-vip-multi-cluster-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-vip-multi-cluster-manager-role
subjects:
- kind: ServiceAccount
  name: kube-vip-multi-cluster-controller-manager
  namespace: kube-vip-multi-cluster-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: kube-vip-multi-cluster
  name: kube-vip-multi-cluster-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-vip-multi-cluster-proxy-role
subjects:
- kind: ServiceAccount
  name: kube-vip-multi-cluster-controller-manager
  namespace: kube-vip-multi-cluster-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: kube-vip-multi-cluster
    control-plane: controller-manager
  name: kube-vip-multi-cluster-controller-manager-metrics-service
  namespace: kube-vip-multi-cluster-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kube-vip-multi-cluster
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: kube-vip-multi-cluster
    control-plane: controller-manager
  name: kube-vip-multi-cluster-controller-manager
  namespace: kube-vip-multi-cluster-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args: null
        command:
        - /manager
        image: ghcr.io/kube-vip/kube-vip-multi-cluster:v0.0.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kube-vip-multi-cluster-controller-manager
      terminationGracePeriodSeconds: 10
